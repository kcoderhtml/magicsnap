---
import Base from "../../Layouts/Base.astro";
import { SignIn } from "auth-astro/components";

import { getSession } from "auth-astro/server";
import { type Session } from "@auth/core/types";
import { db } from "astro:db";
import { Invite } from "astro:db";
import { like } from "astro:db";
import { Organization } from "astro:db";

import { LogSnag } from "logsnag";

const logsnag = new LogSnag({
	token: process.env.LOGSNAG_TOKEN || "",
	project: "magicsnap",
});

type ExtendedSession = {
	team: string;
	teamName: string;
	teamImage: string;
	user: {
		role: string;
	};
};

const session = (await getSession(Astro.request)) as Session & ExtendedSession;

if (session && session.user.role !== "guest") {
	const error = "authorization_error";
	const errorDescription = "You are already signed in to a valid team!";
	const queryParams = new URLSearchParams({ error, errorDescription });
	const redirectUrl = `/error?${queryParams.toString()}`;

	return new Response(null, {
		status: 302,
		headers: new Headers({
			Location: redirectUrl,
		}),
	});
}

const joinCode = Astro.params.joinCode;

if (!joinCode) {
	const error = "join_code_error";
	const errorDescription = "No join code provided!";
	const queryParams = new URLSearchParams({ error, errorDescription });
	const redirectUrl = `/error?${queryParams.toString()}`;

	return new Response(null, {
		status: 302,
		headers: new Headers({
			Location: redirectUrl,
		}),
	});
}

const team = (
	await db.select().from(Invite).where(like(Invite.verificationCode, joinCode))
)[0];

if (!team) {
	const error = "join_code_error";
	const errorDescription = "Invalid join code!";
	const queryParams = new URLSearchParams({ error, errorDescription });
	const redirectUrl = `/error?${queryParams.toString()}`;

	return new Response(null, {
		status: 302,
		headers: new Headers({
			Location: redirectUrl,
		}),
	});
}

if (session && session.user.role === "guest") {
	await db.delete(Invite).where(like(Invite.verificationCode, joinCode));
	await db.insert(Organization).values({
		team: session.team,
		name: session.teamName,
		image: session.teamImage,
	});

	await logsnag.track({
		channel: "join-code",
		event: "create-team",
		icon: "ðŸª„",
		user_id: session.user.id,
		notify: true,
	});
}
---

<Base title="Connect your teams acount to MagicSnap!">
	{
		!session && (
			<>
				<section>
					<p>
						Thanks for signing your team {team.teamName} up for MagicSnap! To
						get started, you'll need to connect your workspace to MagicSnap.
						This will allow us to enable OAuth sign-in, and to access your
						team's profile information.
					</p>
				</section>
				<section class="signin-button">
					<SignIn
						provider="slack"
						options={{ callbackUrl: `/join/${joinCode}` }}
					>
						Connect your workspace
					</SignIn>
				</section>
			</>
		)
	}
	{
		session && session.user.role === "guest" && (
			<>
				<section>
					<p>
						You have successfully connected your team {team.teamName} to
						MagicSnap! You can now sign in to MagicSnap using your account and
						you will be redirected to your team's dashboard as the team owner.
					</p>
				</section>
				<section class="signin-button">
					<SignIn provider="slack" options={{ callbackUrl: `/dashboard` }}>
						Sign In
					</SignIn>
				</section>
			</>
		)
	}
</Base>

<style>
	.signin-button {
		display: flex;
		justify-content: center;
		margin-top: 5rem;
	}
</style>
